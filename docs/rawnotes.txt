Problem statement: Render free tier only supports a single postgres instance which
expires and needs to be recreated frequently.

Plan:
* Use the terraform render provider to provision new postgres instances on demand
* Store the state file locally first: after it's working look into moving it to
  the TerraformCloud free service
* The TerraformCloud free service has a limited number of supported resources so I
  plan to handle the postgres server and perhaps the few deployments that use it.
  If that doesn't use up the resource limit, then mabye a couple of MongoDB Atlas
  databases also
* Once the render deployments are working, look at implementing a manually deployable
  workflow to run the terraform script/s


1. Render API Key
Dashboard | Account Settings | API Keys
Create API Key: infra-render
export RENDER_API_KEY=<API_KEY>

RENDER_API_KEY = rnd_kCRdhULJbyitP1La53fOGI72XpNq

1. Get your RENDER_OWNER_ID (teamid)
Determine your teamid
curl --request GET \
  --url "https://api.render.com/v1/services?limit=20" \
  --header "Accept: application/json" \
  --header "Authorization: Bearer $RENDER_API_KEY" > out.yml

Locate:
"ownerId": "tea-XXX",

export RENDER_OWNER_ID = tea-XXX

RENDER_OWNER_ID = 


2. Render Provider
https://registry.terraform.io/providers/render-oss/render/latest
https://registry.terraform.io/providers/render-oss/render/latest/docs

